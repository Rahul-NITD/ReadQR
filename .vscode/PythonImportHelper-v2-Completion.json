[
    {
        "label": "print_function",
        "importPath": "__future__",
        "description": "__future__",
        "isExtraImport": true,
        "detail": "__future__",
        "documentation": {}
    },
    {
        "label": "argparse",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "argparse",
        "description": "argparse",
        "detail": "argparse",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "pyzbar",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pyzbar",
        "description": "pyzbar",
        "detail": "pyzbar",
        "documentation": {}
    },
    {
        "label": "decode",
        "importPath": "pyzbar.pyzbar",
        "description": "pyzbar.pyzbar",
        "isExtraImport": true,
        "detail": "pyzbar.pyzbar",
        "documentation": {}
    },
    {
        "label": "decode",
        "importPath": "pyzbar.pyzbar",
        "description": "pyzbar.pyzbar",
        "isExtraImport": true,
        "detail": "pyzbar.pyzbar",
        "documentation": {}
    },
    {
        "label": "Decoded",
        "importPath": "pyzbar.pyzbar",
        "description": "pyzbar.pyzbar",
        "isExtraImport": true,
        "detail": "pyzbar.pyzbar",
        "documentation": {}
    },
    {
        "label": "decode",
        "importPath": "pyzbar.pyzbar",
        "description": "pyzbar.pyzbar",
        "isExtraImport": true,
        "detail": "pyzbar.pyzbar",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "UnidentifiedImageError",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "decodeQR",
        "importPath": "qr",
        "description": "qr",
        "isExtraImport": true,
        "detail": "qr",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".venv.Scripts.read_zbar",
        "description": ".venv.Scripts.read_zbar",
        "peekOfCode": "def main(args=None):\n    if args is None:\n        args = sys.argv[1:]\n    parser = argparse.ArgumentParser(\n        description='Reads barcodes in images, using the zbar library'\n    )\n    parser.add_argument('image', nargs='+')\n    parser.add_argument(\n        '-v', '--version', action='version',\n        version='%(prog)s ' + pyzbar.__version__",
        "detail": ".venv.Scripts.read_zbar",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "backend.readqr.asgi",
        "description": "backend.readqr.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "backend.readqr.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "backend.readqr.settings",
        "description": "backend.readqr.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-#s@o$lvq313pg*&&ek=@uo31+!*kjp=h3&yk!k+=zzgop18v1s'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "backend.readqr.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "backend.readqr.settings",
        "description": "backend.readqr.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-#s@o$lvq313pg*&&ek=@uo31+!*kjp=h3&yk!k+=zzgop18v1s'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "backend.readqr.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "backend.readqr.settings",
        "description": "backend.readqr.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "backend.readqr.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "backend.readqr.settings",
        "description": "backend.readqr.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'readqrapi',",
        "detail": "backend.readqr.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "backend.readqr.settings",
        "description": "backend.readqr.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'readqrapi',\n    'rest_framework',\n]",
        "detail": "backend.readqr.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "backend.readqr.settings",
        "description": "backend.readqr.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'readqr.urls'",
        "detail": "backend.readqr.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "backend.readqr.settings",
        "description": "backend.readqr.settings",
        "peekOfCode": "ROOT_URLCONF = 'readqr.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "backend.readqr.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "backend.readqr.settings",
        "description": "backend.readqr.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "backend.readqr.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "backend.readqr.settings",
        "description": "backend.readqr.settings",
        "peekOfCode": "WSGI_APPLICATION = 'readqr.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.0/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "backend.readqr.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "backend.readqr.settings",
        "description": "backend.readqr.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "backend.readqr.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "backend.readqr.settings",
        "description": "backend.readqr.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "backend.readqr.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "backend.readqr.settings",
        "description": "backend.readqr.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "backend.readqr.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "backend.readqr.settings",
        "description": "backend.readqr.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "backend.readqr.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "backend.readqr.settings",
        "description": "backend.readqr.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "backend.readqr.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "backend.readqr.settings",
        "description": "backend.readqr.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "backend.readqr.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "backend.readqr.settings",
        "description": "backend.readqr.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "backend.readqr.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "backend.readqr.settings",
        "description": "backend.readqr.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "backend.readqr.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend.readqr.urls",
        "description": "backend.readqr.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('api/', include('readqrapi.urls'))\n]",
        "detail": "backend.readqr.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "backend.readqr.wsgi",
        "description": "backend.readqr.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "backend.readqr.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.readqrapi.migrations.0001_initial",
        "description": "backend.readqrapi.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='ImageUpload',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=200)),",
        "detail": "backend.readqrapi.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.readqrapi.migrations.0002_alter_imageupload_image",
        "description": "backend.readqrapi.migrations.0002_alter_imageupload_image",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('readqrapi', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='imageupload',\n            name='image',\n            field=models.ImageField(upload_to='readqrapi/imgs/'),\n        ),",
        "detail": "backend.readqrapi.migrations.0002_alter_imageupload_image",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.readqrapi.migrations.0003_remove_imageupload_name",
        "description": "backend.readqrapi.migrations.0003_remove_imageupload_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('readqrapi', '0002_alter_imageupload_image'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='imageupload',\n            name='name',\n        ),\n    ]",
        "detail": "backend.readqrapi.migrations.0003_remove_imageupload_name",
        "documentation": {}
    },
    {
        "label": "decodeQR",
        "kind": 2,
        "importPath": "backend.readqrapi.ReadQR.qr",
        "description": "backend.readqrapi.ReadQR.qr",
        "peekOfCode": "def decodeQR(imgPath: str):\n    try:\n        img = Image.open(imgPath)\n        res = decode(img)\n        return {\n            \"qr_codes\": extractData(res),\n            \"error\": False\n        }\n    except FileNotFoundError:\n        return {\"error\": True, \"errorData\": \"FileNotFound\"}",
        "detail": "backend.readqrapi.ReadQR.qr",
        "documentation": {}
    },
    {
        "label": "extractData",
        "kind": 2,
        "importPath": "backend.readqrapi.ReadQR.qr",
        "description": "backend.readqrapi.ReadQR.qr",
        "peekOfCode": "def extractData(data):\n    l = []\n    for d in data:\n        p = d.polygon[0]\n        l.append({\n            \"content\": d.data.decode(),\n            \"x\": p.x,\n            \"y\": p.y\n        })\n    return l",
        "detail": "backend.readqrapi.ReadQR.qr",
        "documentation": {}
    },
    {
        "label": "test_OneQR",
        "kind": 2,
        "importPath": "backend.readqrapi.ReadQR.test_qr",
        "description": "backend.readqrapi.ReadQR.test_qr",
        "peekOfCode": "def test_OneQR():\n    path = \"./test_images/qr.png\"\n    res = decodeQR(path)\n    assert res == {\n        \"error\": False,\n        \"qr_codes\": [\n            {\n                \"content\": \"http://en.m.wikipedia.org\",\n                \"x\": 29,\n                \"y\": 25",
        "detail": "backend.readqrapi.ReadQR.test_qr",
        "documentation": {}
    },
    {
        "label": "test_TwoQR",
        "kind": 2,
        "importPath": "backend.readqrapi.ReadQR.test_qr",
        "description": "backend.readqrapi.ReadQR.test_qr",
        "peekOfCode": "def test_TwoQR():\n    path = \"./test_images/qr_2.png\"\n    res = decodeQR(path)\n    assert res == {\n        \"error\": False,\n        \"qr_codes\": [\n            {\n                'content': 'Thalassiodracon', \n                'x': 173, \n                'y': 113",
        "detail": "backend.readqrapi.ReadQR.test_qr",
        "documentation": {}
    },
    {
        "label": "test_NoQR",
        "kind": 2,
        "importPath": "backend.readqrapi.ReadQR.test_qr",
        "description": "backend.readqrapi.ReadQR.test_qr",
        "peekOfCode": "def test_NoQR():\n    path = \"./test_images/noqr.png\"\n    res = decodeQR(path)\n    assert res == {\n        \"error\": False,\n        \"qr_codes\": []\n    }\ndef test_IncorrectType():\n    path = \"./test_images/qr-test.svg\"\n    res = decodeQR(path)",
        "detail": "backend.readqrapi.ReadQR.test_qr",
        "documentation": {}
    },
    {
        "label": "test_IncorrectType",
        "kind": 2,
        "importPath": "backend.readqrapi.ReadQR.test_qr",
        "description": "backend.readqrapi.ReadQR.test_qr",
        "peekOfCode": "def test_IncorrectType():\n    path = \"./test_images/qr-test.svg\"\n    res = decodeQR(path)\n    assert res == {\n        \"error\": True, \n        \"errorData\": \"Cannot Identify Image. Possible Incorrect type.\"\n    }",
        "detail": "backend.readqrapi.ReadQR.test_qr",
        "documentation": {}
    },
    {
        "label": "ReadqrapiConfig",
        "kind": 6,
        "importPath": "backend.readqrapi.apps",
        "description": "backend.readqrapi.apps",
        "peekOfCode": "class ReadqrapiConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'readqrapi'",
        "detail": "backend.readqrapi.apps",
        "documentation": {}
    },
    {
        "label": "ImageUpload",
        "kind": 6,
        "importPath": "backend.readqrapi.models",
        "description": "backend.readqrapi.models",
        "peekOfCode": "class ImageUpload(models.Model):\n    image = models.ImageField(upload_to=\"readqrapi/imgs/\")",
        "detail": "backend.readqrapi.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend.readqrapi.urls",
        "description": "backend.readqrapi.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"\", views.api_home)\n]",
        "detail": "backend.readqrapi.urls",
        "documentation": {}
    },
    {
        "label": "api_home",
        "kind": 2,
        "importPath": "backend.readqrapi.views",
        "description": "backend.readqrapi.views",
        "peekOfCode": "def api_home(req):\n    if 'file' in req.data:\n        file = req.data['file']\n        img = ImageUpload.objects.create(image=file)\n        return Response(readqr(img))\n    else:\n        return Response(data={\"message\", \"upload image with key 'file'\"})\ndef readqr(img: ImageUpload):\n    print(img.image.path)\n    data = decodeQR(img.image.path)",
        "detail": "backend.readqrapi.views",
        "documentation": {}
    },
    {
        "label": "readqr",
        "kind": 2,
        "importPath": "backend.readqrapi.views",
        "description": "backend.readqrapi.views",
        "peekOfCode": "def readqr(img: ImageUpload):\n    print(img.image.path)\n    data = decodeQR(img.image.path)\n    img.image.delete()\n    img.delete()\n    if data[\"error\"]:\n        return data\n    return {\n        \"qr_codes\": data[\"qr_codes\"]\n    }",
        "detail": "backend.readqrapi.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "backend.manage",
        "description": "backend.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'readqr.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "backend.manage",
        "documentation": {}
    }
]